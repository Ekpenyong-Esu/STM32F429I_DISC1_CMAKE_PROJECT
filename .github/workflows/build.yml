name: STM32F429I DISC1

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true  # Make linting optional for now
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install linting tools
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format cppcheck

      - name: Run clang-format check
        continue-on-error: true  # Don't fail on formatting differences
        run: |
          # Ensure the Peripherals directory exists before running clang-format
          if [ -d "Peripherals/" ]; then
            python3 tools/run-clang-format.py --recursive --extensions=c,h Peripherals/ || true
          else
            echo "Directory 'Peripherals/' does not exist. Skipping clang-format check."
          fi

      - name: Run cppcheck static analysis
        run: |
          # Ensure the peripheral directory exists before running cppcheck
          if [ -d "Peripherals/" ]; then
            find Peripherals/ -name "*.c" -o -name "*.h" | grep -v "startup.c" | xargs \
              cppcheck --enable=warning,performance,portability --suppress=missingIncludeSystem --error-exitcode=1 \
                --std=c99 --language=c --inline-suppr \
                -I Peripherals/
          else
            echo "Directory 'Peripherals/' does not exist. Skipping cppcheck."
          fi

  build:
    runs-on: ubuntu-latest  # Correct the platform to a valid runner
    needs: lint
    env:
      CI: true  # Set CI environment variable for CMake to detect
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ARM GCC toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi
          arm-none-eabi-gcc --version

      - name: Install CMake
        run: |
          sudo apt-get install -y cmake
          cmake --version

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../cmake/gcc-arm-none-eabi.cmake

      - name: Build project
        run: |
          cd build
          cmake --build .

      - name: Upload firmware artifact
        if: ${{ !env.ACT }}  # Only run if the token is available
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            build/**/*.elf  # Dynamically find any .elf file in the build directory

      - name: Display build summary for local runs
        if: ${{ env.ACT }}
        run: |
          echo "==== Build completed successfully ===="
          ELF_FILE=$(find build -type f -name "*.elf")
          echo "Build successful! âœ…"
          echo "ELF File: $ELF_FILE"
          ls -la "$ELF_FILE"
          echo "Binary size:"
          arm-none-eabi-size "$ELF_FILE"
